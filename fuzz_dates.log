1                                                          The SAS System                         16:13 Thursday, September 18, 2008

NOTE: Unable to open SASUSER.REGSTRY. WORK.REGSTRY will be opened instead.
NOTE: All registry changes will be lost at the end of the session.

NOTE: Copyright (c) 2002-2003 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) 9.1 (TS1M3)
      Licensed to GROUP HEALTH COOPERATIVE OF PUGET SOUND, Site 0009688001.
NOTE: This session is executing on the XP_PRO  platform.



NOTE: SAS 9.1.3 Service Pack 4

NOTE: SAS initialization used:
      real time           2.39 seconds
      cpu time            0.57 seconds
      
1          /*********************************************
2          * Roy Pardee
3          * Center For Health Studies
4          * (206) 287-2078
5          * pardee.r@ghc.org
6          *
7          * C:\Documents and Settings\pardre1\Desktop\deleteme.sas
8          *
9          * <<purpose>>
10         *********************************************/
11         
12         %macro commify(lst) ;
13           %let re = %sysfunc(prxparse(s/\s+/", "/)) ;
14           %upcase(%sysfunc(prxchange(&re, -1, "&lst")))
15         %mend commify ;
16         
17         /*
18         
19           create xwalk by:
20             union all desired dsets together, taking only id var.
21             add a uniform(0) randy
22             sort by randy.
23             transform randy onto the desired scale for fuzz_days.
24         
25             MRN
26             study_id
27             fuzz_days.
28         
29           create dset of all columns in the indicated tables.
30           select distinct table names into macro array for looping.
31         
32           for each table desired fuzzed:
33         
34             generate field lists w/selective fuzz transforms.
35         
36             create table <<fuzzed_table_name>> as
37             select &field_list
2                                        The SAS System       16:13 Thursday, September 18, 2008

38             from <<unfuzzed table name>> as u INNER JOIN
39                  xwalk as x
40             on  u.<<id_var>> = x.<<id_var>>
41             ;
42         
43           next table
44         
45         
46         */
47         
48         %macro fuzz_dates(
49                   inlib       = /* libname where your to-be-fuzzed dsets live*/
50                 , outlib      = /* name of the libname where you want the fuzzed dsets */
51                 , dsets       = /* a space-delimited list of the dataset(s) whose dates you
51       ! want fuzzed */
52                 , XWalk       = /* name you want for the xwalk dataset */
53                 , IdVar       = /* the id variable in common among the input datasets (which
53       ! gets removed & replaced by a study_id */
54                 , datevars    = /* a space-delimited list of the date variables you want
54       ! fuzzed. Not all date vars are found in all datasets */
55                 , LoFuzzDays  = /* minimum number of days to add */
56                 , HiFuzzDays  = /* max number of days to add */
57               ) ;
58         
59         
60           proc sql noprint ;
61         
62             create table __all_columns as
63             select memname as table_name, name as field_name
64             from dictionary.columns
65             where upcase(libname) = "%upcase(&inlib)" AND
66                   upcase(memname) in (%commify(&dsets)) AND
67                   upcase(name) NOT = %upcase("&IdVar")
68             ;
69         
70             * Read table names into a macro array. ;
71             select distinct table_name
72             into :tname1-:tname99
73             from __all_columns
74             ;
75         
76             %let num_tables = &sqlobs ;
77         
78             select distinct "select &IdVar from " || table_name
79             into :union_statement separated by " union "
80             from __all_columns
81             ;
82         
83             * Create a base xwalk table. ;
84             create table &xwalk as
85             &union_statement
86             ;
87         
3                                        The SAS System       16:13 Thursday, September 18, 2008

88           quit ;
89         
90           data &xwalk ;
91             set &xwalk ;
92             fuzz_days = 0 ;
93             do while(fuzz_days = 0) ;
94               randy = uniform(0) ;
95               fuzz_days = round(((&HiFuzzDays - &LoFuzzDays + 1) * randy + &LoFuzzDays), 1) ;
96             end ;
97           run ;
98         
99           proc sort data = &xwalk ;
100            by randy ;
101          run ;
102        
103          data &outlib..&xwalk ;
104            length study_id $ 10 ;
105            set &xwalk ;
106            study_id = put(_n_, z10.0) ;
107          run ;
108        
109          %* Now we loop through the tables, generating SELECT statements & writing the
109      ! output dsets as necessary. ;
110        
111          %do i = 1 %to &num_tables ;
112            %let this_table = &&tname&i ;
113        
114            %put Working on &this_table ;
115        
116        
117            proc sql noprint feedback ;
118              select case when upcase(name) in (%commify(&datevars)) then 'intnx("day", ' ||
118      ! trim(name) || ', x.fuzz_days, "sameday") as ' || name else name end as var_name
119              into :field_list separated by ', '
120              from __all_columns
121              where table_name = "&this_table" ;
122              ;
123              create table &outlib..&this_table._fuzzed as
124              select study_id, &field_list
125              from  &inlib..&this_table as u INNER JOIN
126                    &outlib..&xwalk as x
127              on    u.&IdVar = x.&IdVar
128              ;
129            quit ;
130        
131        
132          %end ;
133        
134        %mend fuzz_dates ;

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           2.46 seconds
4                                        The SAS System       16:13 Thursday, September 18, 2008

      cpu time            0.60 seconds
      
