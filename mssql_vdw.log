1                                                          The SAS System                            09:51 Wednesday, August 2, 2006

NOTE: Unable to open SASUSER.REGSTRY. WORK.REGSTRY will be opened instead.
NOTE: All registry changes will be lost at the end of the session.

NOTE: Copyright (c) 2002-2003 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) 9.1 (TS1M3)
      Licensed to GROUP HEALTH COOPERATIVE OF PUGET SOUND, Site 0009688001.
NOTE: This session is executing on the WIN_PRO  platform.



NOTE: SAS 9.1.3 Service Pack 2

NOTE: SAS initialization used:
      real time           0.86 seconds
      cpu time            0.07 seconds
      
1          /*********************************************
2          * Roy Pardee
3          * Center For Health Studies
4          * (206) 287-2078
5          * pardee.r@ghc.org
6          *
7          * \\groups\data\CTRHS\Crn\S D R C\VDW\Macros\mssql_vdw.sas
8          *
9          * Copies the vdw datafiles to the instance of mssql running on ctrhs-crn
10         *
11         *********************************************/
12         
13         options linesize = 150 nocenter msglevel = i NOOVP formchar='|-++++++++++=|-/|<>*' ;
14         
15         /*
16         options COMAMID = TCP REMOTE = crnsas ;
17         
18         %include '\\home\pardre1\SAS\SCRIPTS\sasntlogon.sas' ;
19         filename crnsas '\\ctrhs-sas\warehouse\remote\tcpwinbatch.scr';
20         signon crnsas ;
21         rsubmit ;
22         */
23         
24         
25         /* libname mssql ODBC required = "DRIVER=SQL Server;Trusted_Connection=Yes;DATABASE=vdw;SERVER=mlt15t" BULKLOAD = YES DBCOMMIT = 1000 ; */
26         /* libname mssql ODBC required = "DRIVER=SQL Server;Trusted_Connection=Yes;DATABASE=vdw;SERVER=ctrhs-crn,1534" BULKLOAD = YES DBCOMMIT =
26       ! 1000 ;*/
27         libname mssql ODBC required = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX BULKLOAD = YES DBCOMMIT = 1000
27       ! ;
NOTE: Libref MSSQL was successfully assigned as follows: 
      Engine:        ODBC 
      Physical Name: 
28         
29         libname vdw "e:\vdw_data" ;
NOTE: Libref VDW was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: e:\vdw_data
30         
31         /*
32         proc sql ;
33            create table tumor (id num(4) not null, site char(8)) ;
34         quit ;
2 The SAS System                                                                                                       09:51 Wednesday, August 2, 2006

35         */
36         
37         data dsets ;
38         input nom $20. ;
39         datalines ;

NOTE: The data set WORK.DSETS has 9 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

49         ;
50         
51         proc print ;
52         
53         run ;

NOTE: There were 9 observations read from the data set WORK.DSETS.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.26 seconds
      cpu time            0.01 seconds
      

54         
55         %macro DescribeTable(tname) ;
56            describe table vdw.&tname ;
57         %mend DescribeTable ;
58         
59         %macro MakeEmptyTable(tname) ;
60            %put create table mssql.&tname like vdw.&tname ; ;
61            drop table mssql.&tname ;
62            create table mssql.&tname like vdw.&tname ;
63            %* This does not work b/c odbc does not support alter tables... ;
64            %* alter table mssql.&tname add primary key (id) ;
65            %* connect to odbc as msql (required = "DRIVER=SQL Server;Trusted_Connection=Yes;DATABASE=vdw;SERVER=mlt15t") ;
66            %* execute (alter table &tname alter column id int NOT NULL) by msql ;
67            %* execute (alter table &tname add primary key (id)) by msql ;
68            %* disconnect from msql ;
69         %mend MakeEmptyTable ;
70         
71         %macro FillTable(tname) ;
72            connect to odbc as msql (required = "DRIVER=SQL Server;Trusted_Connection=Yes;DATABASE=vdw;SERVER=ctrhs-crn,1534") ;
73            execute (truncate table &tname) by msql ;
74            * execute (drop table test&tname) by msql ;
75         
76            create table mssql.test&tname as
77            select * from vdw.&tname
78            ;
79         
80         
81            %if %lowcase(&tname) = enroll %then %do ;
82               execute (insert into enroll(MRN, enr_date, location, PrimryDr
83                                          , PrmCrCln, MainNet, INS_Medicare
84                                          , INS_Medicaid, INS_Commercial
85                                          , INS_Privatepay, INS_Other, INS_BasicHealth)
86                        select  MRN, cast(cast(enr_month as varchar) + '/1/' + cast(enr_year as varchar) as datetime) as enr_date
3 The SAS System                                                                                                       09:51 Wednesday, August 2, 2006

87                              , location, PrimryDr, PrmCrCln, MainNet, INS_Medicare, INS_Medicaid, INS_Commercial
88                              , INS_Privatepay, INS_Other, INS_BasicHealth
89                        from testenroll) by msql ;
90         
91            %end ;
92            %else %if %lowcase(&tname) = tumor %then %do ;
93         
94               execute(
95                        INSERT INTO TUMOR(idplan, mrn, DXDATE, Sequence, BDATE, IDReg, Race1, Race2, Race3,
96                        Race4, Race5, Hispanic, Tobacco, Gender, dxage, DXYear, ICDOsite, Laterality, Morph,
97                        Behav, Grade, Class, Analytic, StageAJ, StageGen, dcause, vital, DOD, DCnfrm, DSTZ,
98                        AJCC_Ed, DAJC1T_P, DAJC1N_P, DAJC1M_P, DAJC1T_C, DAJC1N_C, DAJC1M_C, DSRG_FAC, DRAD_FAC,
99                        DBCN_FAC, DCHM_FAC, DHRM_FAC, DIMM_FAC, DOTH_FAC, DNDI, DNDX, DTMRK1, DTMRK2, DTMRK3,
100                       CLN_STG, EOD, DT_SURG, DT_CHEMO, DT_HORM, DT_RAD, DT_BRM, DT_OTH, R_N_SURG, R_N_CHEMO,
101                       R_N_HORM, R_N_RAD, R_N_BRM, R_N_OTH, DSRG_SUM, DRAD_SUM, DBCN_SUM, DCHM_SUM, DHRM_SUM,
102                       DIMM_SUM, DOTH_SUM)
103                       SELECT DISTINCT idplan, mrn, DXDATE, Sequence, BDATE, IDReg, Race1, Race2, Race3,
104                       Race4, Race5, Hispanic, Tobacco, Gender, dxage, DXYear, ICDOsite, Laterality, Morph,
105                       Behav, Grade, Class, Analytic, StageAJ, StageGen, dcause, vital, DOD, DCnfrm, DSTZ,
106                       AJCC_Ed, DAJC1T_P, DAJC1N_P, DAJC1M_P, DAJC1T_C, DAJC1N_C, DAJC1M_C, DSRG_FAC, DRAD_FAC,
107                       DBCN_FAC, DCHM_FAC, DHRM_FAC, DIMM_FAC, DOTH_FAC, DNDI, DNDX, DTMRK1, DTMRK2, DTMRK3,
108                       CLN_STG, EOD, DT_SURG, DT_CHEMO, DT_HORM, DT_RAD, DT_BRM, DT_OTH, R_N_SURG, R_N_CHEMO,
109                       R_N_HORM, R_N_RAD, R_N_BRM, R_N_OTH, DSRG_SUM, DRAD_SUM, DBCN_SUM, DCHM_SUM, DHRM_SUM,
110                       DIMM_SUM, DOTH_SUM
111                       FROM TESTTUMOR
112                       where not (mrn = 'LLGW0MKGTH' and sequence = 60 and dxdate = '1976-07-15 00:00:00.000')
113        
114                     ) by msql ;
115        
116           %end ;
117           %else %if %lowcase(&tname) = rx %then %do ;
118              %let smallint_limit = 32766 ;
119              execute (INSERT INTO RX(MRN, RXDATE, NDC, RXSUP, RXAMT, RXMD, DRUGNAME, RXFILL, SOURCE)
120                       select MRN, RXDATE, NDC
121                             , case when RXSUP < 0 then null else RXSUP end as RXSUP
122                             , case when RXAMT < 0 then null when RXAMT > &smallint_limit then null else RXAMT end as RXAMT
123                             , RXMD, DRUGNAME, RXFILL, SOURCE
124                       from testrx
125                      ) by msql ;
126           %end ;
127           %else %do ;
128              execute (insert into &tname select * from test&tname) by msql ;
129           %end ;
130        
131           execute (drop table test&tname) by msql ;
132        
133           disconnect from msql ;
134        %mend FillTable ;
135        
136        %macro LoopDsets ;
137           proc sql noprint feedback ;
138              select nom into :dset1-:dset99
139              from dsets
140              where nom not in ('census2000', 'demog', 'dx', 'enroll', 'px', 'rx')
141              ;
142              %let num_dsets = &SQLOBS ;
143              %do i = 1 %to &num_dsets ;
144                 %let this_dset = &&dset&i ;
4 The SAS System                                                                                                       09:51 Wednesday, August 2, 2006

145                 %put working on &this_dset ;
146                 %*MakeEmptyTable(&this_dset) ;
147                 %*DescribeTable(&this_dset) ;
148                 * reset noexec ;
149                 %FillTable(&this_dset) ;
150              %end ;
151           quit ;
152        
153        %mend ;
154        
155        * options obs = 2000 ;
156        
157        run ;
158        
159        proc sql noexec  ;
160           * delete from mssql.census2000 ;
161           connect to odbc as msql (required = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX) ;
NOTE: Statement not executed due to NOEXEC option.
162           execute (truncate table census2000) by msql ;
NOTE: Statement not executed due to NOEXEC option.
163           disconnect from msql ;
NOTE: Statement not executed due to NOEXEC option.
164           %let var_list = mrn, geocode, medfamincome, education1, FAMINCOME1, FamPoverty, MEDHOUSINCOME, housincome1, houspoverty, fampoverty,
164      ! education1, HOUSES_N, houses_own ;
165           %*let var_list = mrn, geocode, medfamincome ;
166        
167           select houses_own, put(houses_own, best.) as unf
168           from vdw.census2000
169           where medfamincome is not null
170           ;
NOTE: Statement not executed due to NOEXEC option.
171        
172           insert into mssql.census2000(&var_list)
173           /* select mrn, geocode, medfamincome, education1, FAMINCOME1, FamPoverty, MEDHOUSINCOME, housincome1, houspoverty, fampoverty,
173      ! education1, HOUSES_N, round(houses_own, .01) */
174           select &var_list
175           from vdw.census2000
176           where medfamincome is not null
177           ;
NOTE: Statement not executed due to NOEXEC option.
178        
179           * reset exec ;
180        
181        
182        quit ;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.15 seconds
      cpu time            0.03 seconds
      

183        
184        %LoopDsets ;
NOTE: Statement transforms to:

        select DSETS.nom
          from WORK.DSETS
         where DSETS.nom not in ('census2000', 'demog', 'dx', 'enroll', 'px', 'rx');

5 The SAS System                                                                                                       09:51 Wednesday, August 2, 2006

working on tumor

NOTE: Statement transforms to:

        select idplan, NAACCR.mrn, NAACCR.BDATE, NAACCR.IDReg, NAACCR.Race1, NAACCR.Race2, NAACCR.Race3, NAACCR.Race4, NAACCR.Race5, NAACCR.Hispanic, 
NAACCR.Tobacco, NAACCR.Gender, dxage, DXYear, NAACCR.DXDATE, NAACCR.ICDOsite, NAACCR.Laterality, NAACCR.Morph, Behav, Grade, NAACCR.Class, Analytic, 
Sequence, StageAJ, StageGen, dcause, vital, DOD, NAACCR.DCnfrm, DSTZ, AJCC_Ed, NAACCR.DAJC1T_P, NAACCR.DAJC1N_P, NAACCR.DAJC1M_P, NAACCR.DAJC1T_C, 
NAACCR.DAJC1N_C, NAACCR.DAJC1M_C, DSRG_FAC, DRAD_FAC, DBCN_FAC, DCHM_FAC, DHRM_FAC, DIMM_FAC, DOTH_FAC, NAACCR.DNDI, NAACCR.DNDX, NAACCR.DTMRK1, 
NAACCR.DTMRK2, NAACCR.DTMRK3, NAACCR.CLN_STG, NAACCR.EOD, DT_SURG, DT_CHEMO, DT_HORM, DT_RAD, DT_BRM, DT_OTH, NAACCR.R_N_SURG, R_N_CHEMO, R_N_HORM, 
R_N_RAD, R_N_BRM, R_N_OTH, DSRG_SUM, DRAD_SUM, DBCN_SUM, NAACCR.DCHM_SUM, DHRM_SUM, DIMM_SUM, DOTH_SUM
          from ( select '01' as idplan label='HMO Identifier (see list on crn website)' length=2, NAACCR.CHSID as mrn label='CHSID', NAACCR.BDATE 
format=MMDDYY10.0, NAACCR.Patient_ID_Number_20 as IDReg label='Patient_ID_Number_20', NAACCR.Race_1_160 as Race1 label='Race_1_160', 
NAACCR.Race_2_161 as Race2 label='Race_2_161', NAACCR.Race_3_162 as Race3 label='Race_3_162', NAACCR.Race_4_163 as Race4 label='Race_4_163', 
NAACCR.Race_5_164 as Race5 label='Race_5_164', NAACCR.Spanish_Hispanic_Origin_190 as Hispanic label='Spanish_Hispanic_Origin_190', 
NAACCR.Tobacco_History_340 as Tobacco label='Tobacco_History_340', NAACCR.Sex_220 as Gender, INPUT(NAACCR.Age_at_Diagnosis_230, F5.0) as dxage 
label='Age_at_Diagnosis_230' length=3, YEAR(NAACCR.DXDATE) as DXYear label='Year of Diagnosis' length=4, NAACCR.DXDATE format=MMDDYY10.0, 
NAACCR.Primary_Site_400 as ICDOsite label='Primary_Site_400', NAACCR.Laterality_410 as Laterality label='Laterality_410', 
NAACCR.Histologic_Type_ICD_O_3_522 as Morph label='Histologic_Type_ICD_O_3_522', COALESCE(NAACCR.Behavior_Code_ICD_O_3_523, '9') as Behav 
label='Behavior_Code_ICD_O_3_523' length=1, case NAACCR.Grade_440
                                              when '0' then '9'
                                              else NAACCR.Grade_440
                                              end as Grade label='Grade_440' length=1, NAACCR.Class_of_Case_610 as Class label='Class_of_Case_610', 
case 
  when NAACCR.Class_of_Case_610 in ('0', '1', '2', '6') then '1'
  else '0'
  end as Analytic label='Class is Analytic' length=1, NAACCR.Sequence_Number_Central_380 as Sequence label='Sequence_Number_Central_380' length=3, 
NAACCR.AJCCSTG as StageAJ label='AJCC Stage (breast, prostate, and colon only)' length=3, COALESCE(NAACCR.SEER_Summary_Stage_1977_760, 
NAACCR.Derived_SS1977_3010) as StageGen label='SEER_Summary_Stage (1997, derived 2004 on)' length=1, NAACCR.Cause_of_Death_1910 as dcause 
label='Cause_of_Death_1910' length=6, case NAACCR.Vital_Status_1760
                                        when '0' then '2'
                                        when '4' then '2'
                                        else NAACCR.Vital_Status_1760
                                        end as vital length=1, case NAACCR.Vital_Status_1760
                                                                 when '0' then NAACCR.FUDATE
                                                                 when '4' then NAACCR.FUDATE
                                                                 else .
                                                                 end as DOD label='Death Date' format=MMDDYY10.0 length=4, 
NAACCR.Diagnostic_Confirmation_490 as DCnfrm label='Diagnostic confirmation -method used to diagnosis cancer', INPUT(NAACCR.EOD_Tumor_Size_780, F3.1) 
as DSTZ label='EOD---TUMOR SIZE [780]' length=4, NAACCR.TNM_Edition_Number_1060 as AJCC_Ed label='TNM_Edition_Number_1060' length=1, 
NAACCR.TNM_Path_T_880 as DAJC1T_P label='TNM_Path_T_880', NAACCR.TNM_Path_N_890 as DAJC1N_P label='TNM_Path_N_890', NAACCR.TNM_Path_M_900 as DAJC1M_P 
label='TNM_Path_M_900', NAACCR.TNM_Clin_T_940 as DAJC1T_C label='TNM_Clin_T_940', NAACCR.TNM_Clin_N_950 as DAJC1N_C label='TNM_Clin_N_950', 
NAACCR.TNM_Clin_M_960 as DAJC1M_C label='TNM_Clin_M_960', '' as DSRG_FAC label='1st course of surgical treatment at this facility' length=2, '' as 
DRAD_FAC label='1st course of radiation treatment this facility' length=2, '' as DBCN_FAC label='1st course of radiation to CNS this facility' length=
2, '' as DCHM_FAC label='1st course of chemo therapy this facility' length=2, '' as DHRM_FAC label='1st course of hormone therapy this facility' 
length=2, '' as DIMM_FAC label='1st course of immuno therapy this facility' length=2, '' as DOTH_FAC label='1st course of any other therapy this 
facility' length=2, NAACCR.Regional_Nodes_Positive_820 as DNDI label='Regional_Nodes_Positive_820', NAACCR.Regional_Nodes_Examined_830 as DNDX 
label='Regional_Nodes_Examined_830', NAACCR.Tumor_Marker_1_1150 as DTMRK1 label='Tumor_Marker_1_1150', NAACCR.Tumor_Marker_2_1160 as DTMRK2 
label='Tumor_Marker_2_1160', NAACCR.Tumor_Marker_3_1170 as DTMRK3 label='Tumor_Marker_3_1170', NAACCR.TNM_Clin_Stage_Group_970 as CLN_STG 
label='TNM_Clin_Stage_Group_970', NAACCR.EOD, . as DT_SURG label='Date definitive surgery first performed' format=MMDDYY10.0 length=4, . as DT_CHEMO 
label='Date chemotherapy started' format=MMDDYY10.0 length=4, . as DT_HORM label='Date hormone therapy started' format=MMDDYY10.0 length=4, . as 
DT_RAD label='Date radiation therapy started' format=MMDDYY10.0 length=4, . as DT_BRM label='Date immunotherapy started' format=MMDDYY10.0 length=4, 
. as DT_OTH label='Date other therapy started' format=MMDDYY10.0 length=4, NAACCR.Reason_for_No_Surgery_1340 as R_N_SURG 
label='Reason_for_No_Surgery_1340', '' as R_N_CHEMO label='Reason_for_No_Chemo_1440' length=1, '' as R_N_HORM label='Reason_for_No_Hormone_1450' 
length=1, '' as R_N_RAD label='Reason_for_No_Radiation_1430' length=1, '' as R_N_BRM label='Reason no immunotherapy' length=1, '' as R_N_OTH 
label='Reason no other therapy' length=1, PUT(INPUT(COALESCE(NAACCR.RX_Summ_Surg_Prim_Site_1290, NAACCR.RX_Summ_Surg_Site_98_02_1646, 
NAACCR.RX_Summ_Surgery_Type_1640), F2.0), Z2.0) as DSRG_SUM label='Summ_Surg 1290, 1640, 1646' length=2, PUT(INPUT(NAACCR.RX_Summ_Radiation_1360, 
F2.0), Z2.0) as DRAD_SUM label='RX_Summ_Radiation_1360', PUT(INPUT(NAACCR.RX_Summ_Rad_to_CNS_1370, F2.0), Z2.0) as DBCN_SUM 
label='RX_Summ_Rad_to_CNS_1370', NAACCR.RX_Summ_Chemo_1390 as DCHM_SUM label='RX_Summ_Chemo_1390', PUT(INPUT(NAACCR.RX_Summ_Hormone_1400, F2.0), 
6 The SAS System                                                                                                       09:51 Wednesday, August 2, 2006

Z2.0) as DHRM_SUM label='RX_Summ_Hormone_1400', PUT(INPUT(NAACCR.RX_Summ_BRM_1410, F2.0), Z2.0) as DIMM_SUM label='RX_Summ_BRM_1410', 
PUT(INPUT(NAACCR.RX_Summ_Other_1420, F2.0), Z2.0) as DOTH_SUM label='RX_Summ_Other_1420'
                   from _BUBBA.naaccr
                  using libname _bubba '\\ctrhs-sas\Warehouse\Sasdata\Cancer\naaccr'
               );

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: Table MSSQL.testtumor created, with 52345 rows and 70 columns.

working on utilization

NOTE: Statement transforms to:

        select UTILIZATION.MRN, UTILIZATION.ENCTYPE, UTILIZATION.ENCOUNTER_SUBTYPE, UTILIZATION.PROVIDER, UTILIZATION.ADATE, UTILIZATION.DDATE, 
UTILIZATION.FACILITY_CODE, UTILIZATION.DEPARTMENT, UTILIZATION.DISCHARGE_STATUS, UTILIZATION.DRG, UTILIZATION.DISCHARGE_DISPOSITION, 
UTILIZATION.VISTNUM
          from VDW.UTILIZATION;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: Table MSSQL.testutilization created, with 51989534 rows and 12 columns.

working on vitalsigns

NOTE: Statement transforms to:

        select VITALSIGNS.MRN, VITALSIGNS.Measure_Date, VITALSIGNS.HT, VITALSIGNS.WT, VITALSIGNS.Diastolic, VITALSIGNS.Systolic, VITALSIGNS.Position, 
VITALSIGNS.Dsource, VITALSIGNS.Days_Diff, VITALSIGNS.BMI
          from VDW.VITALSIGNS;

NOTE: SAS variable labels, formats, and lengths are not written to DBMS tables.
NOTE: Table MSSQL.testvitalsigns created, with 2308953 rows and 10 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           59:32.50
      cpu time            18:41.00
      

185        
186        /*
187        
188        endrsubmit ;
189        signoff crnsas ;
190        */
191        
192        endsas ;

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           59:34.42
      cpu time            18:41.21
      
