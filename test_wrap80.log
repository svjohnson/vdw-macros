1                                                          The SAS System                               14:27 Tuesday, April 6, 2010

NOTE: Copyright (c) 2002-2008 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.2 (TS1M0) 
      Licensed to GROUP HEALTH COOPERATIVE OF PUGET SOUND, Site 70007081.
NOTE: This session is executing on the XP_PRO  platform.



NOTE: SAS initialization used:
      real time           19.31 seconds
      cpu time            1.14 seconds
      
1          /*********************************************
2          * Roy Pardee
3          * Group Health Research Institute
4          * (206) 287-2078
5          * pardee.r@ghc.org
6          *
7          *
8          *
9          * test_wrap80.sas
10         *********************************************/
11         
12         %include "\\home\pardre1\SAS\Scripts\remoteactivate.sas" ;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.64 seconds
      cpu time            0.01 seconds
      

NOTE: Remote signon to CHSDWSAS commencing (SAS Release 9.02.01M0P020508).
NOTE: Script file 'tcpwin.scr' entered.
NOTE: Logged onto Windows... Starting remote SAS now.
NOTE: SAS/CONNECT conversation established.
NOTE: Unable to open SASUSER.PROFILE. WORK.PROFILE will be opened instead.
NOTE: All profile changes will be lost at the end of the session.
NOTE: Copyright (c) 2002-2008 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.2 (TS1M0) 
      Licensed to GROUP HEALTH COOPERATIVE OF PUGET SOUND, Site 70007082.
NOTE: This session is executing on the NET_SRV  platform.



NOTE: SAS initialization used:
      real time           0.35 seconds
      cpu time            0.09 seconds
      
NOTE: Remote signon to CHSDWSAS complete.
2                                                          The SAS System                               14:27 Tuesday, April 6, 2010

NOTE: Remote submit to CHSDWSAS commencing.
1    %make_spm_comment(&CurrFile)

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: The file _COMMENT is:
      Filename=\\ctrhs-sas\scratch2\_TD28216\spm_comment.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=06Apr2010:14:27:51,
      Create Time=06Apr2010:14:27:51

NOTE: 1 record was written to the file _COMMENT.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2    
3    ***********************;
4    * Set the typical libnames... ;
5    %let DWROOT = \\ctrhs-sas\warehouse\SasData\ ;
6    libname consumer  "&DWROOT.Consumer" ;
NOTE: Libref CONSUMER was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\Consumer
7    libname chsid     "&DWROOT.CHSID" ;
NOTE: Libref CHSID was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\CHSID
8    libname demogs    "&DWROOT.Consumer Demographics" ;
NOTE: Libref DEMOGS was successfully assigned as follows: 
      Engine:        V9 
3                                                          The SAS System                               14:27 Tuesday, April 6, 2010

      Physical Name: \\ctrhs-sas\warehouse\SasData\Consumer Demographics
9    libname enroll    "&DWROOT.Enrollment" ;
NOTE: Libref ENROLL was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\Enrollment
10   libname nac       "&DWROOT.Cancer\Naaccr" ;
NOTE: Libref NAC was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\Cancer\Naaccr
11   libname naaccr    "&DWROOT.Cancer\Naaccr" ;
NOTE: Libname NAACCR refers to the same physical library as NAC.
NOTE: Libref NAACCR was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\Cancer\Naaccr
12   libname baseline  "&DWROOT.Baseline" ;
NOTE: Libref BASELINE was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\Baseline
13   libname arpa      "&DWROOT.arpa" ;
NOTE: Libref ARPA was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\arpa
14   libname mbhist    "&DWROOT.mbhist" ;
NOTE: Libref MBHIST was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\mbhist
15   libname mbcurr    "&DWROOT.mbcurr" ;
NOTE: Libref MBCURR was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\mbcurr
16   libname claims    "&DWROOT.claims" ;
NOTE: Libref CLAIMS was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\claims
17   libname death     "&DWROOT.death" ;
NOTE: Libref DEATH was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\death
18   libname hosp      "&DWROOT.Hospital" ;
NOTE: Libref HOSP was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\Hospital
19   libname VDW       "&DWROOT.CRN_VDW" ;
NOTE: Libref VDW was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\CRN_VDW
20   libname hosps     "&DWROOT.hospital" ;
NOTE: Libname HOSPS refers to the same physical library as HOSP.
NOTE: Libref HOSPS was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\Hospital
21   libname rx        "&DWROOT.rx" ;
NOTE: Libref RX was successfully assigned as follows: 
4                                                          The SAS System                               14:27 Tuesday, April 6, 2010

      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\rx
22   libname lab       "&DWROOT.lab" ;
NOTE: Libref LAB was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\warehouse\SasData\lab
23   libname s         "\\ctrhs-sas\sasuser\pardre1" ;
NOTE: Libref S was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\sasuser\pardre1
24   
25   footnote "Program file: &CurrFile " ;
26   
27   
28   options linesize = 150 nocenter msglevel = i NOOVP formchar='|-++++++++++=|-/|<>*' dsoptions="note2err" NOSQLREMERGE ;
29   
30   libname t '\\ctrhs-sas\SASUser\pardre1\nlp' ;
NOTE: Libref T was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: \\ctrhs-sas\SASUser\pardre1\nlp
31   
32   
33   
34   /*
35   **The following two data steps create two test data sets - although I would love it if tests used real data!;
36   
**234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890*234567890123456789012345678901
2345678901234
36 ! 56789012345678901234567890123456789012345678901234567890;
37   data testdata100;
38     input rowid 101-104 type $ 106 comment $ 1-100 mrn $ 108-116 Test_Type $ 118-127;
39     cards;
40   Now is the time for all good men to come to the aid of their country.  Whatwill, we do next about    123 N 987654321 K
41   this?  Perhaps I should just keep typing away?  No, no that would be boring.  I'm thinking of a      123 N 987654321 K
42   plan.  This line is too short.  I want some comments to flow over to the next line.                  123 N 987654321 K
43   We now need more data for a second person.                                                           234 N 123456789 HGBA1C
44   Third person...                                                                                      345 N 432143214 HGBA1C
45   dfasdasd, asdadasd, adasdadadad, adfdgfdfghfhjfhj, s fsdfsfsf, sfsfsfs, sf, sdfsgdhdhfjfj, dfgf      345 R 432143214 HGBA1C
46   klsdkjsdkf, sklsdkljsf,sd sdkjfkdglls slfl, kjdfjxcidikcjchjdhk, sd sdflisdf, sd sdf                 345 R 432143214 HGBA1C
47   run;
48   data testdata200;
49     input rowid $ 201-204 type $ 206 comment $ 1-200 mrn $ 208-216 Test_Type $ 218-227;
50     cards;
51   Now is the time for all good men to come to the aid of their country.  Whatwill, we do next about this?  Perhaps I should just 
keep typing away?
51 !  No, no that would be boring.  I'm thinking of a plan.  123 N 987654321 K
52   This line is too short.  I want some comments to flow over to the next line.
52 !                                                         123 N 987654321 K
53   We now need more data for a second person.
53 !                                                         234 N 123456789 HGBA1C
54   Third person...
54 !                                                         345 N 432143214 HGBA1C
55   dfasdasd, asdadasd, adasdadadad, adfdgfdfghfhjfhj, s fsdfsfsf, sfsfsfs, sf, sdfsgdhdhfjfj, dfgf klsdkjsdkf, sklsdkljsf,sd 
5                                                          The SAS System                               14:27 Tuesday, April 6, 2010

sdkjfkdglls slfl,
55 ! kjdfjxcidikcjchjdhk, sd sdflisdf, sd sdfadd more             345 R 432143214 HGBA1C
56   not many breaks in this
56 ! 
linekkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk,kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
kkkkkkkkkkkkk
56 ! kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkP 345 R 432143214 HGBA1C
57   but there are breaks in this line la la la
57 ! 
klsdfo8rjgfnsdiingfnvlitjoirjnirtlrjrooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
ooooooo more
57 ! breaks       345 R 432143214 HGBA1C
58   run;
59   */
60   
61   *The WRAP80 macro takes comments that are longer than 80 bytes and wraps them into
62    the data set variable Result_Note which has a length of 80 bytes.  Additional observations
63    are created as necessary.
64   
65   *Since the maximum length for character variables = 32767 in any operating system this
66    code will theoretically work for a comment variable with up to 16383 bytes storage;
67   
68   *WRAP80 Macro Parameters ==>
69     *  &readDS=data set that is being read and can be a permanent or temporary data set.
70          This data set should have, at a minimum the variables ROWID, TYPE and COMMENT.
71          COMMENT can be any length up to 16383 bytes.  It is assumed that the records are
72          sorted by ROWID and TYPE with the COMMENTs in the desired order.
73          COMMENT will be wrapped into RESULT_NOTE with 80 bytes of storage.  More records will
74          be created as needed with breaks occurring at desired characters only.
75          LINE, the fourth variable in the LAB_NOTES data set, will be calculated.
76          This variable is a required positional parameter.
77   
78     *  &writeDS=data set being created and can be a permanent or temporary data set.
79          This data set will contain ROWID, RESULT_NOTE, TYPE and LINE
80          This variable is a required positional parameter.
81   
82     *  &addon_vars allows the user to keep additional site specific variables
83          This variable is an optional positional parameter.;
84   
85    /*  &split_at=list of characters where split can occur in COMMENT to create Result_Note variable
86          This variable is an optional keyword parameter and has a default value of blank . ; , ? and !
87    */
88   ;
89   
90   %include '\\groups\data\CTRHS\Crn\S D R C\VDW\Macros\draft_WRAPnote80_20100401.sas' ;
175  
176  data gnu ;
177    set t.merged_path(obs = 10000 rename = (chsid = mrn diagdesc = comment)) ;
178    rowid = _n_ ;
179    type = 'R' ;
180    test_type = 'path' ;
181    keep rowid type comment mrn test_type ;
182  run ;
6                                                          The SAS System                               14:27 Tuesday, April 6, 2010


NOTE: There were 10000 observations read from the data set T.MERGED_PATH.
NOTE: The data set WORK.GNU has 10000 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           2.32 seconds
      cpu time            1.07 seconds
      

183  
184  %wrap80(readDS = gnu, writeDS = s.wrap80_test) ;
NOTE: SAS threaded sort was used.
NOTE: Table WORK.ATTRIBUTE1 created, with 5 rows and 3 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
      


NOTE: There were 5 observations read from the data set WORK.ATTRIBUTE1.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 10000 observations read from the data set WORK.GNU.
NOTE: The data set S.WRAP80_TEST has 33843 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           1.20 seconds
      cpu time            1.04 seconds
      

NOTE: Remote submit to CHSDWSAS complete.
NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           53.60 seconds
      cpu time            2.58 seconds
      
