***********************************************************************************************;
* MACRO: PULLCONTINUOUS                                                                        ;
* VARIABLES NECESSARY TO PROVIDE:                                                              ;
*                                                                                              ;
* PLUGIN     * DATASET WITH 2 VARIABLES: MRN, INDEXDT=INDEX/DIAGNOSIS DATE                     ;
* PRETIME    * CONTINUOUS MONTHS OF MEMBERSHIP PRIOR TO INDEX DT REQUIRED (DEFAULT=0)          ;
* PREGAP     * NUMBER OF MONTHS DISENROLLMENT ALLOWED PRIOR TO INDEX DT (DEFAULT=0 CUMULATIVE) ;
* POSTIME    * CONTINUOUS MONTHS OF MEMBERSHIP AFTER INDEX DT REQUIRED (DEFAULT=0)             ;
* POSTGAP    * NUMBER OF MONTHS DISENROLLMENT ALLOWED AFTER INDEX DT (DEFAULT=0 CUMULATIVE)    ;
*                                                                                              ;
* TO CALL:    PULLCONTINUOUS(PLUGIN,PRETIME,PREGAP,POSTIME=0,POSTGAP=0)                        ;
***********************************************************************************************;

%MACRO PULLCONTINUOUS(PLUGIN,PRETIME=0,PREGAP=0,POSTIME=0,POSTGAP=0);

%PUT PLUGIN=&PLUGIN PRETIME=&PRETIME PREGAP=&PREGAP
POSTIME=&POSTIME POSTGAP=&POSTGAP;

/*** CREATE MARKERS FOR MONTH MATRIX */
TITLE "TO PULL SAMPLE WITH &PRETIME CONTINUOUS MONTHS MEMBERSHIP PRE DX DATE (&PREGAP MONTH GAP)";
TITLE2 "&POSTIME CONTINUOUS MONTHS MEMBERSHIP POST DX DATE (&POSTGAP MONTH GAP)";;
DATA DATEX;
     SET &PLUGIN;
     INDEXMON = MONTH(INDEXDT);
     INDEXYR = YEAR(INDEXDT);
     MATRXIND = (CEIL(&PRETIME/12) *12) + MONTH(INDEXDT);
     MATRXPRE = MATRXIND-&PRETIME;
     MATRXPOST = MATRXIND+&POSTIME;
     PREDTMON = MATRXPRE-((FLOOR(MATRXPRE/12))*12);
     IF PREDTMON = 0 THEN PREDTMON = 12;
     PREDTYR= INDEXYR-(CEIL(&PRETIME/12));
     POSTDTMON = MATRXPOST-((FLOOR(MATRXPOST/12))*12);
     IF POSTDTMON = 0 THEN POSTDTMON = 12;
     POSTDTYR = INDEXYR+(FLOOR(&POSTIME/12));
PROC PRINT DATA = DATEX (OBS=30 DROP= MRN);
RUN;

/*** GET DATA FOR EACH CASE BOUNDED BY INDEX MARKERS */
PROC SQL;
     CREATE TABLE TESTDATA AS
     SELECT  DATEX.POSTDTMON, DATEX.POSTDTYR, DATEX.PREDTYR, DATEX.PREDTMON,
          ENR.MRN, ENR.ENR_MONTH, ENR.ENR_YEAR,
          1 AS ANCHOR
     FROM DATEX, enrol.ENROLL AS ENR
     WHERE (((ENR_YEAR = PREDTYR) AND (ENR_MONTH >= PREDTMON))
          OR
            ((ENR_YEAR = POSTDTYR) AND (ENR_MONTH <= POSTDTMON))
          OR
          (PREDTYR < ENR_YEAR < POSTDTYR))
          AND (ENR.MRN=DATEX.MRN);
     QUIT;

TITLE 'MAX # MONTHS IN MATRIX';
PROC SQL;
     SELECT MAX(MATRXPOST)
     INTO :MONMAX
     FROM DATEX;
     QUIT;
%LET MONMAX=&MONMAX;
%PUT MONMAX= &MONMAX;

PROC PRINT DATA = TESTDATA (OBS=100 DROP = MRN);
TITLE 'TESTDATA';
RUN;

DATA TESTDATA (KEEP=MRN MON ANCHOR);
     SET TESTDATA (KEEP=MRN ENR_MONTH ENR_YEAR PREDTYR ANCHOR);
MON = TRIM('E'||LEFT(((ENR_YEAR-PREDTYR)*12)+ENR_MONTH));

PROC PRINT DATA = TESTDATA (OBS=30 DROP = MRN);
TITLE 'TESTDATA';
RUN;

PROC FREQ DATA = TESTDATA;
TABLES MON;RUN;

PROC SORT DATA  = TESTDATA;
 BY MRN;

/*** CREATE ARRAY OF MEMBER MONTHS INDEXED TO MONTH MATRIX */
PROC TRANSPOSE DATA = TESTDATA OUT = T2 NAME =TEMP;
     BY MRN;
     ID  MON;
     IDLABEL MON;
     VAR ANCHOR;
     RUN;

proc print data= t2 (obs=30 DROP = MRN);
     run;

/*** MERGE ARRAY AND MATRIX MARKERS */
PROC SQL;
     CREATE TABLE T3 AS
     SELECT T2.*,DATEX.*
     FROM T2,DATEX
     WHERE T2.MRN=DATEX.MRN;
     QUIT;


TITLE 'SAMPLE BEFORE ARRAY LOOKUP';RUN;

/*** DETERMINE CONTINOUS MEMBERSHIP AND GAPS : OUTPUT SELECTED CASES AND EXCLUDED */
DATA SELECTED EXCLUDED;
     SET T3;
ARRAY ENRX (*) E1-E&MONMAX;
KTRPRE = 0; KTRPOST = 0;
GAPPRE = 0; GAPPOST =0;
DO I = MATRXPRE TO MATRXPOST ;
  IF (I < MATRXIND) AND (ENRX(I) = 1) THEN KTRPRE + 1;
     ELSE IF (I < MATRXIND) AND (ENRX(I) = .) THEN GAPPRE+1;
  IF (&POSTIME>0) THEN DO;
     IF (MATRXIND < I <= MATRXPOST) AND (ENRX(I) = 1) THEN KTRPOST + 1;
     ELSE IF (MATRXIND < I <= MATRXPOST) AND (ENRX(I) = .) THEN GAPPOST + 1;
  END;
*PUT MRN 'ENRX(I)='ENRX(I) 'I=' I 'MATRXIND=' MATRXIND 'KTRPRE=' KTRPRE 'GAPPRE=' GAPPRE 'GAPPOST=' GAPPOST;
END;
IF (KTRPRE >= (&PRETIME-&PREGAP) AND KTRPOST >= (&POSTIME-&POSTGAP)) THEN OUTPUT SELECTED;
ELSE OUTPUT EXCLUDED;
RUN;

TITLE "MEMBERS WITH &PRETIME CONTINUOUS MONTHS MEMBERSHIP PRE DX DATE (&PREGAP MONTH GAP)";
TITLE2 "&POSTIME CONTINUOUS MONTHS MEMBERSHIP POST DX DATE (&POSTGAP MONTH GAP)";;

PROC SQL;
     SELECT COUNT(*) AS TOTAL_SELECTED
     FROM SELECTED;
     QUIT;

Proc print data= SELECTED (obs=30);
     VAR E1-E&MONMAX INDEXDT MATRXPRE MATRXIND MATRXPOST KTRPRE GAPPRE KTRPOST GAPPOST;
     run;

PROC FREQ DATA = SELECTED;
     TABLES GAPPRE GAPPOST;
     RUN;

PROC FREQ DATA = EXCLUDED;
     TABLES KTRPRE*GAPPRE KTRPOST*GAPPOST/LIST;
     TITLE 'EXCLUDED CASES';
     RUN;

%MEND PULLCONTINUOUS;